class Solution {
public:
    vector<int> maxSubsequence(vector<int>& nums, int k) {
        unordered_set<int> s;
        int n = size(nums);
        auto comp = [&nums](int a, int b) {
            return nums[a] > nums[b];
        };
        priority_queue<int, vector<int>, decltype(comp)> pq(comp);
        for (int i = 0; i < n; i++) pq.push(i);
        for (int i = 0; i < n - k; i++) {
            s.insert(pq.top());
            pq.pop();
        }
        vector<int> ans;
        for (int i = 0; i < n; i++) {
            if (s.count(i)) continue;
            ans.push_back(nums[i]);
        }
        return ans;
    }
};
