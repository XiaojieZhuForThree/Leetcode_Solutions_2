class Solution {
public:
    vector<string> getLongestSubsequence(vector<string>& words, vector<int>& groups) {
        vector<int> s0 = helper(groups, 0), s1 = helper(groups, 1);
        if (size(s0) < size(s1)) s0 = s1;
        vector<string> ans;
        for (int i : s0) ans.push_back(words[i]);
        return ans; 
    }
private:
    vector<int> helper(vector<int>& v, int b) {
        vector<int> ans;
        for (int i = 0; i < size(v); i++) {
            if (v[i] != b) continue;
            ans.push_back(i);
            b = 1 - b;
        }
        return ans;
    }
};
