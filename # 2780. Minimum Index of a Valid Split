#include <vector>
using std::vector;

class Solution {
public:
    int minimumIndex(vector<int>& nums) {
        int d = helper(nums), n = size(nums);
        vector<bool> l(n, false), r(n, false);
        int cnt = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] == d) cnt++;
            l[i] = cnt * 2 > (i + 1);
        }
        cnt = 0;
        for (int i = n - 1; i >= 0; i--) {
            if (nums[i] == d) cnt++;
            r[i] = cnt * 2 > (n - i);
        }
        for (int i = 0; i < n - 1; i++) {
            if (l[i] && r[i + 1]) return i;
        }
        return -1;
    }
private:
    int helper(vector<int>& nums) {
        int ans = 0, cnt = 0;
        for (int i : nums) {
            if (i == ans) cnt++;
            else if (cnt == 0) ans = i;
            else cnt--;
        }
        return ans;
    }
};
