#include <string>
#include <vector>
using std::string;

class Solution {
    public:
        string shortestCommonSupersequence(string str1, string str2) {
            int m = size(str1), n = size(str2), cur = 0;
            std::vector<std::vector<int>> dp(m + 1, std::vector<int>(n + 1, 0));
            for (int i = 1; i <= m; i++) {
                for (int j = 1; j <= n; j++) {
                    if (str1[i - 1] == str2[j - 1]) {
                        dp[i][j] = dp[i - 1][j - 1] + 1;
                    } else dp[i][j] = std::max(dp[i][j - 1], dp[i - 1][j]);
                }
            }
            string ans;
            int i = m, j = n;
            while (i > 0 && j > 0) {
                if (str1[i - 1] == str2[j - 1]) {
                    ans += str1[i - 1];
                    i--;
                    j--;
                } else if (dp[i - 1][j] > dp[i][j - 1]) {
                    ans += str1[i - 1];
                    i--;
                } else {
                    ans += str2[j - 1];
                    j--;
                }
            }
            while (i > 0) ans += str1[i-- - 1];
            while (j > 0) ans += str2[j-- - 1];
            reverse(ans.begin(), ans.end());
            return ans;
        }
    };
