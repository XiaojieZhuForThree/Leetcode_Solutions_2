#include <unordered_map>
#include <vector>
using std::vector;

class FindSumPairs {
public:
    std::unordered_map<int, int> m1, m2;
    vector<int> n1, n2;
    FindSumPairs(vector<int>& nums1, vector<int>& nums2) {
        for (int i : nums1) m1[i]++;
        for (int i : nums2) m2[i]++;
        n1 = nums1;
        n2 = nums2;
    }
    
    void add(int index, int val) {
        int prev = n2[index];
        m2[prev]--;
        n2[index] += val;
        m2[n2[index]]++;
    }
    
    int count(int tot) {
        int ans = 0;
        for (auto& p : m1) {
            if (m2.count(tot - p.first)) ans += p.second * m2[tot - p.first];
        }
        return ans;
    }
};

/**
 * Your FindSumPairs object will be instantiated and called as such:
 * FindSumPairs* obj = new FindSumPairs(nums1, nums2);
 * obj->add(index,val);
 * int param_2 = obj->count(tot);
 */
