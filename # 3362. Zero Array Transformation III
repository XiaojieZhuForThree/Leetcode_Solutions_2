#include <vector>
#include <queue>
#include <algorithm>
using std::vector;

class Solution {
public:
    int maxRemoval(vector<int>& nums, vector<vector<int>>& queries) {
        int m = size(queries), n = size(nums);
        sort(queries.begin(), queries.end());
        std::priority_queue<int> pq;
        vector<int> v(n + 1, 0);
        int cnt = 0, i = 0, j = 0;
        for (int i = 0; i < n; i++) {
            v[i] += i > 0 ? v[i - 1] : 0;
            while (j < m && queries[j][0] <= i) {
                pq.push(queries[j][1]);
                j++;
            }
            while (v[i] < nums[i]) {
                if (pq.empty() || pq.top() < i) return -1;
                v[pq.top() + 1]--;
                pq.pop();
                v[i]++;
                cnt++;
            }
        }
        return m - cnt;
    }
};
