#include <vector>
using std::vector;

class Solution {
public:
    long long gridGame(vector<vector<int>>& grid) {
        int n = size(grid[0]);
        vector<vector<long long>> dp(2, vector<long long>(n, 0));
        for (int i = 0; i < n; i++) {
            int j = n - 1 - i;
            dp[0][j] = grid[0][j];
            dp[1][i] = grid[1][i];
            if (i > 0) {
                dp[0][j] += dp[0][j + 1];
                dp[1][i] += dp[1][i - 1];
            }
        }
        int long long ans = LONG_MAX;
        for (int i = 0; i < n; i++) {
            long long l = 0, r = 0;
            if (i < n - 1) r = dp[0][i + 1];
            if (i > 0) l = dp[1][i - 1];
            ans = std::min(ans, std::max(l, r));
        }
        return ans;
    }
};
