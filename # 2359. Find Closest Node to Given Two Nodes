class Solution {
public:
    int closestMeetingNode(vector<int>& edges, int node1, int node2) {
        int n = size(edges);
        vector<int> v1(n, -1), v2(n, -1);
        helper(edges, v1, node1, 0);
        helper(edges, v2, node2, 0);
        int val = -1, ans = -1;
        for (int i = 0; i < n; i++) {
            if (v1[i] == -1 || v2[i] == -1) continue;
            if (val == -1 || val > max(v1[i], v2[i])) {
                val = max(v1[i], v2[i]);
                ans = i;
            }
        }
        return ans;
    }
private:
    void helper(vector<int>& edges, vector<int>& v, int i, int cur) {
        if (v[i] != -1 && v[i] < cur) return;
        v[i] = cur;
        if (edges[i] == -1) return;
        helper(edges, v, edges[i], cur + 1);
    }
};
