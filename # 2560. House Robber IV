#include <vector>
using std::vector;

class Solution {
public:
    int minCapability(vector<int>& nums, int k) {
        int l = 1, r = 1000000000;
        while (l < r) {
            int m = l + (r - l) / 2;
            if (valid(nums, m, k)) r = m;
            else l = m + 1;
        }
        return l;
    }
private:
    bool valid(vector<int>& nums, int v, int k) {
        int n = size(nums);
        vector<int> dp;
        for (int i = 0; i < n; i++) {
            int cur = nums[i] <= v ? 1 : 0;
            int ans1 = i >= 2 ? cur + dp[i - 2] : cur;
            int ans2 = i >= 1 ? dp[i - 1] : 0;
            dp.push_back(std::max(ans1, ans2));
        }
        return dp[n - 1] >= k;
    }
};
