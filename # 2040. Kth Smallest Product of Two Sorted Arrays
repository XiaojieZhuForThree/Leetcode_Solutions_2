#include <vector>
using std::vector;

class Solution {
public:
    long long kthSmallestProduct(vector<int>& nums1, vector<int>& nums2, long long k) {
        long long l = -1e10, h = 1e10;
        while (l < h) {
            long long m = l + (h - l) / 2;
            long long cnt = helper(m, nums1, nums2);
            if (cnt < k) l = m + 1;
            else h = m;
        }
        return l;
    }
private:
    long long helper(long long m, vector<int>& nums1, vector<int>& nums2) {
        long long cnt = 0;
        for (int i : nums1) {
            if (i == 0) {
                if (m >= 0) cnt += size(nums2);
            } else if (i > 0) {
                long long j = floor(m * 1.0 / i);
                cnt += upper_bound(nums2.begin(), nums2.end(), j) - nums2.begin();
            } else {
                long long j = ceil(m * 1.0 / i);
                cnt += size(nums2) - (lower_bound(nums2.begin(), nums2.end(), j) - nums2.begin()); 
            }
        }
        return cnt;
    }
};
